schema {
  query: QueryRoot
  mutation: MutationRoot
}

input CreateUserDto {
  externalId: String!
  name: String!
}

type Model {
  externalId: String!
  id: UUID!
  name: String!
}

type MutationRoot {
  create(dto: CreateUserDto!): Model!
  createUserIfNotExists(dto: CreateUserDto!, externalId: String!): Model!
}

type QueryRoot {
  getUserByExternalId(externalId: String!): Model!
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as
Strings within GraphQL. UUIDs are used to assign unique identifiers to
entities without requiring a central allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID
