schema {
  query: QueryRoot
  mutation: MutationRoot
}

input CreateGroupDto {
  name: String!
  ownerId: String!
}

input CreateUserDto {
  externalId: String!
  name: String!
}

type Group {
  id: String!
  name: String!
  owner: User!
  ownerId: String!
  users: [User!]!
}

type MutationRoot {
  createGroup(dto: CreateGroupDto!): Group!
  createUser(dto: CreateUserDto!): User!
  createUserIfNotExists(dto: CreateUserDto!): User!
}

type QueryRoot {
  getUserByExternalId(externalId: String!): User!
}

type User {
  externalId: String!
  groups: [Group!]!
  id: String!
  name: String!
}
